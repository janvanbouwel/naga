integer = @{ ASCII_DIGIT+ }

arity = ${ integer ~ "->" ~ integer }

open_func  = _{ "(" }
close_func = _{ ")" }

func_def = { open_func ~ separated_expressions ~ close_func }

apply = { "!" }

quote = ${ "'" ~ identifier? }

bind = ${ "$" ~ identifier }

identifier = @{ "?" | "=" | "_" | (ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_" | "-")*) }

/// literal has precedence before identifier
expression = _{
    arity
  | integer
  | func_def
  | apply
  | quote
  | bind
  | identifier
}

sep = _{ NEWLINE | WHITE_SPACE }

separated_expressions = _{ sep* ~ (expression ~ (sep+ ~ expression)*)? ~ sep* }

program = _{
    SOI ~ separated_expressions ~ EOI
}

// WHITESPACE = _{}
COMMENT = _{ "#" ~ (!"\n" ~ ANY)* }
