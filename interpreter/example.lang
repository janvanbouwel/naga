# 1 dup 'print ( drop ) ? !

( $op ( len 0 = 'drop ( \ op / loop ) ? ! ) dup $loop ! ) $foreach

[ 1 2 3 ] 'print foreach

( = assert ) $assertEq

# list init op
( $op push ( len 1 = 'out ( \ op / loop ) ? ! ) $loop loop ) $fold

[ 1 2 3 ] 0 '+ fold 6 assertEq

[ 1 4 5 ] 0 ( drop print 0 ) fold

( 0 '+ fold ) $sum

1 1 + 2 assertEq

1 dup + 2 assertEq

[] \ 5 / len 1 assertEq out 5 assertEq

[ 1 2 ] sum 3 assertEq

5 ( 1 + ) $ao ( ao ) ! 6 assertEq

# 1 dup 'print ( drop ) ? !
# #
# [] \ 1 2 3 / ( 5 + ) map sum 21 assertEq

[ 1 2 3 ] sum 6 assertEq

# doWhile: arr ([>=n]->[]) m
# [ 1 2 3 ] '+ 2 doWhile
